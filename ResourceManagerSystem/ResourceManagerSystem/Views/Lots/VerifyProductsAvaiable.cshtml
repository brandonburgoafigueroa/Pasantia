@model Dictionary<string, IEnumerable<string>>
@{
    ViewData["Title"] = "VerifyProductsAvaiable";
}

<h2>VerifyProductsAvaiable</h2>




<div class="row">
    <div class="alert-warning col-lg-5">Antes de añadir Repp de entrada a su lote verifique que los repps, colores y tamaños que requiera estan en la lista</div>

</div>


<div class="row">
    <div class="col-lg-3">
        <table class="table">
            <thead>
                <tr>
                    <th>

                        @await Html.PartialAsync("_CreateRepp", new REPP() { })

                        <br />
                        Repps Disponibles

                    </th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model["Repps"])
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item)
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
    <div class="col-lg-3">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @await Html.PartialAsync("_CreateColor", new Color() { })
                        <br />
                        Colores Disponibles
                    </th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model["Colors"])
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item)
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
    <div class="col-lg-3">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @await Html.PartialAsync("_CreateSize", new Size() { })
                        <br />
                        Tamaños Disponibles
                    </th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model["Sizes"])
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item)
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
    <div class="col-lg-3">
        <div class="affix form-group">
            <form asp-action="AddItems" method="get" enctype="multipart/form-data" id="FormQuantity">
                <div>Ingrese la cantidad de repps que agregara en el lote</div>
                <input type="hidden" name="lot" id="lot" value="@Model["Lot"].First()" />
                <input type="number" class="form-controL" id="quantity" name="quantity" />
                <input type="submit" class="btn btn-success" value="Continuar" />
            </form>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    var reloadPost = function (event) {
        var $this = $(this);
        var frmValues = $this.serialize();
        $.ajax({
            type: $this.attr('method'),
            url: $this.attr('action'),
            data: frmValues
        })
            .done(function () {
                location.reload();
            })
        event.preventDefault();
    };
    $("#ColorFrom").on("submit", reloadPost);
        $("#ReppForm").on("submit", reloadPost);
        $("#SizeForm").on("submit", reloadPost);
</script>
